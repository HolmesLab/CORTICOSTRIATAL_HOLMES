regs_in <- regs_in[regs_in != 0]
avg_out <- matrix(nrow=24, ncol=length(regs_in))
colnames(avg_out) <- regs_in
for ( reg in regs_in ){
cur_reg_data <- NULL
for ( file in filenames ){
print(file)
names             <- strsplit(file, '_')   # split file name
donor             <- names[[1]][3]        # Extract donor name
matches <- colnames(all_data[[donor]]$choi17_indRoi_express) == reg
if (length(matches[matches]) == 1){
cur_expr     <- all_data[[donor]]$choi17_indRoi_express[,matches]
cur_reg_data <- cbind(cur_reg_data, cur_expr)
}
}
cur_avg <- rowMeans(cur_reg_data)
avg_out[,colnames(avg_out)==reg] <- cur_avg
}
acg_out
avg_out
View(avg_out)
read.csv('/Users/kevinanderson/Desktop/Projects/SCZ_PROJ/Yeo_JNeurophysiol11_MNI152/choi17_ind_roi_key.csv')
reg_key <- read.csv('/Users/kevinanderson/Desktop/Projects/SCZ_PROJ/Yeo_JNeurophysiol11_MNI152/choi17_ind_roi_key.csv')
heatmap.2(avg_out, scale="none", key=TRUE, col = mycol , trace='none')
mycol <- colorpanel(n=100, low="blue", mid="white", high="red")
heatmap.2(avg_out, scale="none", key=TRUE, col = mycol , trace='none')
reg_key <- read.csv('/Users/kevinanderson/Desktop/Projects/SCZ_PROJ/Yeo_JNeurophysiol11_MNI152/choi17_ind_roi_key.csv')
mycol <- colorpanel(n=100, low="blue", mid="white", high="red")
heatmap.2(cor(avg_out), scale="none", key=TRUE, col = mycol , trace='none')
reg_key
colnames(avg_out)
colnames(avg_out)
reg_key[,2]
reg_key[,colnames(avg_out)]
reg_key[,2]==colnames(avg_out)
reg_key[,2]
reg_key[,2] == 8
reg_key[,reg_key[,2] == 8]
reg_key[reg_key[,2] == 8,]
reg_key[reg_key[,2] == 8,1]
reg_key[reg_key[,2] == 8,1]
reg_key <- read.csv('/Users/kevinanderson/Desktop/Projects/SCZ_PROJ/Yeo_JNeurophysiol11_MNI152/choi17_ind_roi_key.csv')
for (reg in colnames(avg_out)){
out <- reg_key[reg_key[,2] == reg,1]
}
out
reg_key <- read.csv('/Users/kevinanderson/Desktop/Projects/SCZ_PROJ/Yeo_JNeurophysiol11_MNI152/choi17_ind_roi_key.csv')
out_arr <- NULL
for (reg in colnames(avg_out)){
out     <- reg_key[reg_key[,2] == reg,1]
out_arr <- c(out_arr, out)
}
out_arr
colnames()
plot_me <- avg_out
dim(plot_me)
colnames(plot_me)
colnames(plot_me) <- out_arr
colnames(plot_me) <- out_arr
length(out_arr)
out_arr <- NULL
for (reg in colnames(avg_out)){
out     <- reg_key[reg_key[,2] == reg,1]
out_arr <- c(out_arr, out)
}
avg_out
dim(out_arr <- NULL
for (reg in colnames(avg_out)){
out     <- reg_key[reg_key[,2] == reg,1]
out_arr <- c(out_arr, out)
})
dim(avg_out)
length(out_arr)
colnames(plot_me) <- out_arr
heatmap.2(cor(avg_out), scale="none", key=TRUE, col = mycol , trace='none')
heatmap.2(cor(plot_me), scale="none", key=TRUE, col = mycol , trace='none')
k7_cort           <- kmeans(plot_me, 7)
k7_cort
k7_cort$cluster
length(k7_cort$cluster)
dim(plot_me)
k7_cort           <- kmeans(cor(plot_me), 7)
k7_cort$cluster
colnames(k7_cort$cluster)
colnames(k7_cort$cluster)
table(k7_cort$cluster, out_arr)
summary(table(k7_cort$cluster, out_arr))
k7_cort$cluster
genes_order
plot_me           <- avg_out
heatmap.2(cor(plot_me), scale="none", key=TRUE, col = mycol , trace='none')
reg_key
colnames(plot_me)
colnames(plot_me)==138
present_regions
list(unique(all_data[[1]]$choi17_ind_netArr),
unique(all_data[[2]]$choi17_ind_netArr),
unique(all_data[[3]]$choi17_ind_netArr),
unique(all_data[[4]]$choi17_ind_netArr),
unique(all_data[[5]]$choi17_ind_netArr),
unique(all_data[[6]]$choi17_ind_netArr)
)
c(unique(all_data[[1]]$choi17_ind_netArr),
unique(all_data[[2]]$choi17_ind_netArr),
unique(all_data[[3]]$choi17_ind_netArr),
unique(all_data[[4]]$choi17_ind_netArr),
unique(all_data[[5]]$choi17_ind_netArr),
unique(all_data[[6]]$choi17_ind_netArr)
)
x<-c(unique(all_data[[1]]$choi17_ind_netArr),
unique(all_data[[2]]$choi17_ind_netArr),
unique(all_data[[3]]$choi17_ind_netArr),
unique(all_data[[4]]$choi17_ind_netArr),
unique(all_data[[5]]$choi17_ind_netArr),
unique(all_data[[6]]$choi17_ind_netArr))
x==138
x[x==138]
c(unique(all_data[[1]]$choi17_ind_netArr),
unique(all_data[[2]]$choi17_ind_netArr),
unique(all_data[[3]]$choi17_ind_netArr),
unique(all_data[[4]]$choi17_ind_netArr),
unique(all_data[[5]]$choi17_ind_netArr),
unique(all_data[[6]]$choi17_ind_netArr))
all_data[[donor]]$choi17_ind_netArr
all_data <- NULL
for ( file in filenames ){
names             <- strsplit(file, '_')   # split file name
donor             <- names[[1]][3]        # Extract donor name
# Choi and Yeo network overlaps
arr_in <- read.csv(file=paste('/Users/kevinanderson/Desktop/Projects/SCZ_PROJ/NET_ARR/striat_', donor, '_7_netarr.csv', sep=''))
all_data[[donor]]$striat_netArr_7 <- arr_in$x
arr_in <- read.csv(file=paste('/Users/kevinanderson/Desktop/Projects/SCZ_PROJ/NET_ARR/corr_', donor, '_7_netarr.csv', sep=''))
all_data[[donor]]$corr_netArr_7 <- arr_in$x
arr_in <- read.csv(file=paste('/Users/kevinanderson/Desktop/Projects/SCZ_PROJ/NET_ARR/striat_', donor, '_17_netarr.csv', sep=''))
all_data[[donor]]$striat_netArr_17 <- arr_in$x
arr_in <- read.csv(file=paste('/Users/kevinanderson/Desktop/Projects/SCZ_PROJ/NET_ARR/corr_', donor, '_17_netarr.csv', sep=''))
all_data[[donor]]$corr_netArr_17 <- arr_in$x
arr_in <- read.csv(file=paste('/Users/kevinanderson/Desktop/Projects/SCZ_PROJ/NET_ARR/ind_rois_cort_', donor, '_17_netarr.csv', sep=''))
all_data[[donor]]$choi17_ind_netArr <- arr_in$x
}
donor
names             <- strsplit(file, '_')   # split file name
donor             <- names[[1]][3]        # Extract donor name
# Choi and Yeo network overlaps
arr_in <- read.csv(file=paste('/Users/kevinanderson/Desktop/Projects/SCZ_PROJ/NET_ARR/striat_', donor, '_7_netarr.csv', sep=''))
all_data[[donor]]$striat_netArr_7 <- arr_in$x
arr_in <- read.csv(file=paste('/Users/kevinanderson/Desktop/Projects/SCZ_PROJ/NET_ARR/corr_', donor, '_7_netarr.csv', sep=''))
all_data[[donor]]$corr_netArr_7 <- arr_in$x
arr_in <- read.csv(file=paste('/Users/kevinanderson/Desktop/Projects/SCZ_PROJ/NET_ARR/striat_', donor, '_17_netarr.csv', sep=''))
all_data[[donor]]$striat_netArr_17 <- arr_in$x
arr_in <- read.csv(file=paste('/Users/kevinanderson/Desktop/Projects/SCZ_PROJ/NET_ARR/corr_', donor, '_17_netarr.csv', sep=''))
all_data[[donor]]$corr_netArr_17 <- arr_in$x
arr_in <- read.csv(file=paste('/Users/kevinanderson/Desktop/Projects/SCZ_PROJ/NET_ARR/ind_rois_cort_', donor, '_17_netarr.csv', sep=''))
paste('/Users/kevinanderson/Desktop/Projects/SCZ_PROJ/NET_ARR/ind_rois_cort_', donor, '_17_netarr.csv', sep='')
all_data[[donor]]$choi17_ind_netArr
all_data[[do1nor]]$choi17_ind_netArr
all_data[[1]]$choi17_ind_netArr
donor
all_data[[2]]$choi17_ind_netArr
all_data[[3]]$choi17_ind_netArr
all_data[[4]]$choi17_ind_netArr
all_data[[5]]$choi17_ind_netArr
all_data[[5]]$choi17_ind_netArr# -------------------------------------------
all_data <- NULL
for ( file in filenames ){
names             <- strsplit(file, '_')   # split file name
donor             <- names[[1]][3]        # Extract donor name
# Choi and Yeo network overlaps
arr_in <- read.csv(file=paste('/Users/kevinanderson/Desktop/Projects/SCZ_PROJ/NET_ARR/striat_', donor, '_7_netarr.csv', sep=''))
all_data[[donor]]$striat_netArr_7 <- arr_in$x
arr_in <- read.csv(file=paste('/Users/kevinanderson/Desktop/Projects/SCZ_PROJ/NET_ARR/corr_', donor, '_7_netarr.csv', sep=''))
all_data[[donor]]$corr_netArr_7 <- arr_in$x
arr_in <- read.csv(file=paste('/Users/kevinanderson/Desktop/Projects/SCZ_PROJ/NET_ARR/striat_', donor, '_17_netarr.csv', sep=''))
all_data[[donor]]$striat_netArr_17 <- arr_in$x
arr_in <- read.csv(file=paste('/Users/kevinanderson/Desktop/Projects/SCZ_PROJ/NET_ARR/corr_', donor, '_17_netarr.csv', sep=''))
all_data[[donor]]$corr_netArr_17 <- arr_in$x
}
all_data[[donor]]
# Read in all of the data
# -------------------------------------------
all_data <- NULL
for ( file in filenames ){
names             <- strsplit(file, '_')   # split file name
donor             <- names[[1]][3]        # Extract donor name
cur_data          <- read_aba(dir, file)
all_data[[donor]] <- cur_data[[donor]]
}
atlas   <- 'choi17_ind_rois+orig.BRIK'
net_arr <- cort_query(all_data[[donor]])
all_data[[donor]]$choi17_ind_netArr <- net_arr
atlas   <- 'choi17_ind_rois+orig.BRIK'
net_arr <- cort_query(all_data[[donor]])
data_struct$cort_samples[,1]
file <- filenames[1]
names             <- strsplit(file, '_')   # split file name
donor             <- names[[1]][3]        # Extract donor name
# Cortex - ID numbers for Striatal structures
# ---------------------------------------------------------------------
cortex                   <- c(4054,4079,4889,4890,4891,4892,4048,4036,4042,
4045,4039,4901,4060,4051,4029,4030,4031,265504410,
4072,4073,4074,4066,4069,4057,4011,4012,4013,4014,
4015,4022,4023,4024,4898,4270,4273,4222,4223,4224,
4229,4230,4231,4236,4237,4238,4063,4258,4254,4255,
4256,4257,265504428,4251,4252,4253,265504436,265504440,
4243,4244,4245,10143,4185,4186,4187,4206,4207,4208,
4192,4193,4194,4182,4909,4910,4911,4199,4200,4201,
4213,4214,4215,4112,4113,4114,4105,4106,4107,4126,
4127,4128,4086,4087,4088,4089,4090,4119,4120,4121,
4097,4098,4099,4157,4158,4159,4160,4166,4148,4149,
4150,4151,4141,4142,4143,4178,4172,4134,4135,4136,
4175,4903,4904,4905)
cort_idxs                         <- all_data[[donor]]$all_samps$structure_id %in% cortex
all_data[[donor]]$cort_samples    <- all_data[[donor]]$all_samps[cort_idxs,] # select info from striatal samples
all_data[[donor]]$all_cort_micros <- as.data.frame(all_data[[donor]]$all_micros)[, cort_idxs]
all_data[[donor]]$cort_acros      <- factor(all_data[[donor]]$cort_samples$structure_acronym) # list of corresponding struct acronyms
all_data[[donor]]$cort_modules    <- as.character(all_data[[donor]]$cort_acros) # anatomical labels
all_data[[donor]]$cort_meds       <- t(apply(all_data[[donor]]$all_cort_micros, 1, function(x) x - median(x)))
atlas   <- 'choi17_ind_rois+orig.BRIK'
net_arr <- cort_query(all_data[[donor]])
write.csv(file=paste('/Users/kevinanderson/Desktop/Projects/SCZ_PROJ/NET_ARR/ind_rois_cort_', donor, '_17_netarr.csv', sep=''), x = all_data[[donor]]$choi17_ind_netArr)
donor
write.csv(file=paste('/Users/kevinanderson/Desktop/Projects/SCZ_PROJ/NET_ARR/ind_rois_cort_', donor, '_17_netarr.csv', sep=''), x = all_data[[donor]]$choi17_ind_netArr)
all_data[[donor]]$choi17_ind_netArr
all_data[[donor]]$choi17_ind_netArr <- net_arr
all_data[[donor]]$choi17_ind_netArr
write.csv(file=paste('/Users/kevinanderson/Desktop/Projects/SCZ_PROJ/NET_ARR/ind_rois_cort_', donor, '_17_netarr.csv', sep=''), x = all_data[[donor]]$choi17_ind_netArr)
filenames[2:]
filenames[,2:]
filenames[:]
for ( file in filenames ){
names             <- strsplit(file, '_')   # split file name
donor             <- names[[1]][3]        # Extract donor name
# Cortex - ID numbers for Striatal structures
# ---------------------------------------------------------------------
cortex                   <- c(4054,4079,4889,4890,4891,4892,4048,4036,4042,
4045,4039,4901,4060,4051,4029,4030,4031,265504410,
4072,4073,4074,4066,4069,4057,4011,4012,4013,4014,
4015,4022,4023,4024,4898,4270,4273,4222,4223,4224,
4229,4230,4231,4236,4237,4238,4063,4258,4254,4255,
4256,4257,265504428,4251,4252,4253,265504436,265504440,
4243,4244,4245,10143,4185,4186,4187,4206,4207,4208,
4192,4193,4194,4182,4909,4910,4911,4199,4200,4201,
4213,4214,4215,4112,4113,4114,4105,4106,4107,4126,
4127,4128,4086,4087,4088,4089,4090,4119,4120,4121,
4097,4098,4099,4157,4158,4159,4160,4166,4148,4149,
4150,4151,4141,4142,4143,4178,4172,4134,4135,4136,
4175,4903,4904,4905)
cort_idxs                         <- all_data[[donor]]$all_samps$structure_id %in% cortex
all_data[[donor]]$cort_samples    <- all_data[[donor]]$all_samps[cort_idxs,] # select info from striatal samples
all_data[[donor]]$all_cort_micros <- as.data.frame(all_data[[donor]]$all_micros)[, cort_idxs]
all_data[[donor]]$cort_acros      <- factor(all_data[[donor]]$cort_samples$structure_acronym) # list of corresponding struct acronyms
all_data[[donor]]$cort_modules    <- as.character(all_data[[donor]]$cort_acros) # anatomical labels
all_data[[donor]]$cort_meds       <- t(apply(all_data[[donor]]$all_cort_micros, 1, function(x) x - median(x)))
atlas   <- 'choi17_ind_rois+orig.BRIK'
net_arr <- cort_query(all_data[[donor]])
all_data[[donor]]$choi17_ind_netArr <- net_arr
write.csv(file=paste('/Users/kevinanderson/Desktop/Projects/SCZ_PROJ/NET_ARR/ind_rois_cort_', donor, '_17_netarr.csv', sep=''), x = all_data[[donor]]$choi17_ind_netArr)
}
temp    <- '/Users/kevinanderson/Desktop/motion/HCP_r_vals_lh.csv'
data    <- read.table(temp, sep=',')
HCP_lh <- as.data.frame(data)
colnames(HCP_lh) <- c('Full','5%','10%','15%','20%','25%','30%','35%')
temp    <- '/Users/kevinanderson/Desktop/motion/HCP_r_vals_lh.csv'
data    <- read.table(temp, sep=',')
data_df <- as.data.frame(data)
colnames(data_df) <- c('Full','5%','10%','15%','20%','25%','30%','35%')
#r2_df   <- as.data.frame(data_df**2)
full <- as.data.frame(append(data_df['Full'][data_df['Full']!=0], data_df['Full'][data_df['Full']!=0]))
colnames(full) <- 'Corr'
full$type <- '0%'
full$num <- 1
five <- as.data.frame(append(data_df['5%'][data_df['5%']!=0], data_df_2['5%'][data_df_2['5%']!=0]))
colnames(five) <- 'Corr'
five$type <- '05%'
five$num <- 2
ten <- as.data.frame(append(data_df['10%'][data_df['10%']!=0], data_df_2['10%'][data_df_2['10%']!=0]))
colnames(ten) <- 'Corr'
ten$type <- '10%'
ten$num <- 3
fifteen <- as.data.frame(append(data_df['15%'][data_df['15%']!=0], data_df_2['15%'][data_df_2['15%']!=0]))
colnames(fifteen) <- 'Corr'
fifteen$type <- '15%'
fifteen$num <- 4
twenty <- as.data.frame(append(data_df['20%'][data_df['20%']!=0], data_df_2['20%'][data_df_2['20%']!=0]))
colnames(twenty) <- 'Corr'
twenty$type <- '20%'
twenty$num <- 5
twentyfive <- as.data.frame(append(data_df['25%'][data_df['25%']!=0], data_df_2['25%'][data_df_2['25%']!=0]))
colnames(twentyfive) <- 'Corr'
twentyfive$type <- '25%'
twentyfive$num <- 6
thirty <- as.data.frame(append(data_df['30%'][data_df['30%']!=0], data_df_2['30%'][data_df_2['30%']!=0]))
colnames(thirty) <- 'Corr'
thirty$type <- '30%'
thirty$num <- 7
thirtyfive <- as.data.frame(append(data_df['35%'][data_df['35%']!=0], data_df_2['35%'][data_df_2['35%']!=0]))
colnames(thirtyfive) <- 'Corr'
thirtyfive$type <- '35%'
thirtyfive$num <- 8
all_data <- rbind(full, five, ten, fifteen, twenty, twentyfive, thirty, thirtyfive)
y_marks <- c(0,.01,.02,.03)*dim(all_data)[1]/2
ggplot(all_data, aes(rz)) +
geom_histogram(data=subset(all_data, type == 'NoCov'), fill = "black", aes(colour='NoCov'), alpha = 0.2, binwidth=.0025) +
geom_histogram(data=subset(all_data, type == 'Cov'), fill = "blue", aes(colour='Cov'), alpha = 0.2, binwidth=.0025) +
scale_colour_manual(values=c('NoCov'="black", 'Cov'="blue"), name="Type") +
theme_classic() +
scale_x_continuous(breaks = c(-.25,-.20,-.15,-.10,-.05,0,.05,.1,.15,.20,.25), limits=c(-.25,.25), labels=c(-.25,-.2,-.15,-.10,-.05,0,.05,.1,.15,.2,.25)) +
scale_y_continuous(breaks = y_marks, limits=c(0,5000), labels=c(0,.01,.02,.03)) +
theme(legend.justification=c(1,0),
legend.position=c(1,.5))
colnames(all_data)
y_marks <- c(0,.01,.02,.03)*dim(all_data)[1]/2
ggplot(all_data, aes(Corr)) +
geom_histogram(data=subset(all_data, type == 'NoCov'), fill = "black", aes(colour='NoCov'), alpha = 0.2, binwidth=.0025) +
geom_histogram(data=subset(all_data, type == 'Cov'), fill = "blue", aes(colour='Cov'), alpha = 0.2, binwidth=.0025) +
scale_colour_manual(values=c('NoCov'="black", 'Cov'="blue"), name="Type") +
theme_classic() +
scale_x_continuous(breaks = c(-.25,-.20,-.15,-.10,-.05,0,.05,.1,.15,.20,.25), limits=c(-.25,.25), labels=c(-.25,-.2,-.15,-.10,-.05,0,.05,.1,.15,.2,.25)) +
scale_y_continuous(breaks = y_marks, limits=c(0,5000), labels=c(0,.01,.02,.03)) +
theme(legend.justification=c(1,0),
legend.position=c(1,.5))
colnames(all_data)
all_data$Corr
all_data$type
y_marks <- c(0,.01,.02,.03)*dim(subset(all_data, type == '0%'))[1]
ggplot(all_data, aes(Corr)) +
geom_density(data=subset(all_data, type == '0%'), fill = "black", aes(colour='0%'), alpha = 0.2) +
geom_density(data=subset(all_data, type == '5%'), fill = "blue", aes(colour='5%'), alpha = 0.2) +
scale_colour_manual(values=c('0%'="black", '5%'="blue"), name="Type") +
theme_classic() +
theme(legend.justification=c(1,0),
legend.position=c(1,0))+
scale_x_continuous(breaks = c(-.25,-.20,-.15,-.10,-.05,0,.05,.1,.15,.20,.25), limits=c(-.25,.25), labels=c(-.25,-.2,-.15,-.10,-.05,0,.05,.1,.15,.2,.25)) +
scale_y_continuous(breaks = y_marks, limits=c(0,5000), labels=c(0,.01,.02,.03)) +
theme(legend.justification=c(1,0),
legend.position=c(1,.5))
all_data$type
all_data$Corr
ggplot(all_data, aes(Corr)) +
geom_density(data=subset(all_data, type == '0%'), fill = "black", aes(colour='0%'), alpha = 0.2)
all_data$type=='5%'
all_data$type[all_data$type=='5%']
five <- as.data.frame(append(data_df['5%'][data_df['5%']!=0], data_df_2['5%'][data_df_2['5%']!=0]))
colnames(five) <- 'Corr'
five$type <- '5%'
five$num <- 2
y_marks <- c(0,.01,.02,.03)*dim(subset(all_data, type == '0%'))[1]
ggplot(all_data, aes(Corr)) +
geom_histogram(data=subset(all_data, type == '0%'), fill = "black", aes(colour='0%'), alpha = 0.2) +
geom_histogram(data=subset(all_data, type == '5%'), fill = "blue", aes(colour='5%'), alpha = 0.2) +
scale_colour_manual(values=c('0%'="black", '5%'="blue"), name="Type") +
theme_classic() +
theme(legend.justification=c(1,0),
legend.position=c(1,0))+
scale_x_continuous(breaks = c(-.25,-.20,-.15,-.10,-.05,0,.05,.1,.15,.20,.25), limits=c(-.25,.25), labels=c(-.25,-.2,-.15,-.10,-.05,0,.05,.1,.15,.2,.25)) +
scale_y_continuous(breaks = y_marks, limits=c(0,5000), labels=c(0,.01,.02,.03)) +
theme(legend.justification=c(1,0),
legend.position=c(1,.5))
all_data$type[all_data$type=='5%']
all_data <- rbind(full, five, ten, fifteen, twenty, twentyfive, thirty, thirtyfive)
all_data$type[all_data$type=='5%']
y_marks <- c(0,.01,.02,.03)*dim(subset(all_data, type == '0%'))[1]
ggplot(all_data, aes(Corr)) +
geom_histogram(data=subset(all_data, type == '0%'), fill = "black", aes(colour='0%'), alpha = 0.2) +
geom_histogram(data=subset(all_data, type == '5%'), fill = "blue", aes(colour='5%'), alpha = 0.2) +
scale_colour_manual(values=c('0%'="black", '5%'="blue"), name="Type") +
theme_classic() +
theme(legend.justification=c(1,0),
legend.position=c(1,0))+
scale_x_continuous(breaks = c(-.25,-.20,-.15,-.10,-.05,0,.05,.1,.15,.20,.25), limits=c(-.25,.25), labels=c(-.25,-.2,-.15,-.10,-.05,0,.05,.1,.15,.2,.25)) +
scale_y_continuous(breaks = y_marks, limits=c(0,5000), labels=c(0,.01,.02,.03)) +
theme(legend.justification=c(1,0),
legend.position=c(1,.5))
y_marks <- c(0,.01,.02,.03)*dim(subset(all_data, type == '0%'))[1]
ggplot(all_data, aes(Corr)) +
geom_histogram(data=subset(all_data, type == '0%'), fill = "black", aes(colour='0%'), alpha = 0.2) +
geom_histogram(data=subset(all_data, type == '5%'), fill = "blue", aes(colour='5%'), alpha = 0.2) +
scale_colour_manual(values=c('0%'="black", '5%'="blue"), name="Type") +
theme_classic() +
theme(legend.justification=c(1,0),
legend.position=c(1,0))
y_marks <- c(0,.01,.02,.03)*dim(subset(all_data, type == '0%'))[1]
ggplot(all_data, aes(Corr)) +
geom_histogram(data=subset(all_data, type == '0%'), fill = "black", aes(colour='0%'), alpha = 0.2) +
geom_histogram(data=subset(all_data, type == '5%'), fill = "blue", aes(colour='5%'), alpha = 0.2) +
scale_colour_manual(values=c('0%'="black", '5%'="blue"), name="Type") +
theme_classic() +
theme(legend.justification=c(1,0),
legend.position=c(1,0))+
xlim(-.25,.25) +
scale_y_continuous(breaks = y_marks, limits=c(0,5000), labels=c(0,.01,.02,.03)) +
theme(legend.justification=c(1,0),
legend.position=c(1,.5))
y_marks <- c(0,.01,.02,.03)*dim(subset(all_data, type == '0%'))[1]
ggplot(all_data, aes(Corr)) +
geom_histogram(data=subset(all_data, type == '0%'), fill = "black", aes(colour='0%'), alpha = 0.2) +
geom_histogram(data=subset(all_data, type == '5%'), fill = "blue", aes(colour='5%'), alpha = 0.2) +
scale_colour_manual(values=c('0%'="black", '5%'="blue"), name="Type") +
theme_classic() +
theme(legend.justification=c(1,0),
legend.position=c(1,0))+
xlim(c(-.25,.25)) +
scale_y_continuous(breaks = y_marks, limits=c(0,5000), labels=c(0,.01,.02,.03)) +
theme(legend.justification=c(1,0),
legend.position=c(1,.5))
y_marks <- c(0,.01,.02,.03)*dim(subset(all_data, type == '0%'))[1]
ggplot(all_data, aes(Corr)) +
geom_histogram(data=subset(all_data, type == '0%'), fill = "black", aes(colour='0%'), alpha = 0.2) +
geom_histogram(data=subset(all_data, type == '5%'), fill = "blue", aes(colour='5%'), alpha = 0.2) +
scale_colour_manual(values=c('0%'="black", '5%'="blue"), name="Type") +
theme_classic() +
theme(legend.justification=c(1,0),
legend.position=c(1,0))+
scale_y_continuous(breaks = y_marks, limits=c(0,5000), labels=c(0,.01,.02,.03)) +
theme(legend.justification=c(1,0),
legend.position=c(1,.5))
y_marks <- c(0,.01,.02,.03)*dim(subset(all_data, type == '0%'))[1]
ggplot(all_data, aes(Corr)) +
geom_histogram(data=subset(all_data, type == '0%'), fill = "black", aes(colour='0%'), alpha = 0.2) +
geom_histogram(data=subset(all_data, type == '5%'), fill = "blue", aes(colour='5%'), alpha = 0.2) +
scale_colour_manual(values=c('0%'="black", '5%'="blue"), name="Type") +
theme_classic() +
theme(legend.justification=c(1,0),
legend.position=c(1,0))+
xlim(c(-.25,.25)) +
scale_y_continuous(breaks = y_marks, limits=c(0,15000), labels=c(0,.01,.02,.03)) +
theme(legend.justification=c(1,0),
legend.position=c(1,.5))
y_marks <- c(0,.01,.02,.03)*dim(subset(all_data, type == '0%'))[1]
ggplot(all_data, aes(Corr)) +
geom_histogram(data=subset(all_data, type == '0%'), fill = "black", aes(colour='0%'), alpha = 0.2) +
geom_histogram(data=subset(all_data, type == '5%'), fill = "blue", aes(colour='5%'), alpha = 0.2) +
scale_colour_manual(values=c('0%'="black", '5%'="blue"), name="Type") +
theme_classic() +
theme(legend.justification=c(1,0),
legend.position=c(1,0))+
xlim(c(-.25,.25)) +
scale_y_continuous(breaks = y_marks, limits=c(0,25000), labels=c(0,.01,.02,.03)) +
theme(legend.justification=c(1,0),
legend.position=c(1,.5))
y_marks <- c(0,.01,.02,.03)*dim(subset(all_data, type == '0%'))[1]
ggplot(all_data, aes(Corr)) +
geom_histogram(data=subset(all_data, type == '0%'), fill = "black", aes(colour='0%'), alpha = 0.2,binwidth = .0025) +
geom_histogram(data=subset(all_data, type == '5%'), fill = "blue", aes(colour='5%'), alpha = 0.2, binwidth = .0025) +
scale_colour_manual(values=c('0%'="black", '5%'="blue"), name="Type") +
theme_classic() +
theme(legend.justification=c(1,0),
legend.position=c(1,0))+
xlim(c(-.25,.25)) +
scale_y_continuous(breaks = y_marks, limits=c(0,35000), labels=c(0,.01,.02,.03)) +
theme(legend.justification=c(1,0),
legend.position=c(1,.5))
y_marks <- c(0,.01,.02,.03)*dim(subset(all_data, type == '0%'))[1]
ggplot(all_data, aes(Corr)) +
geom_histogram(data=subset(all_data, type == '0%'), fill = "black", aes(colour='0%'), alpha = 0.2,binwidth = .0025) +
geom_histogram(data=subset(all_data, type == '5%'), fill = "blue", aes(colour='5%'), alpha = 0.2, binwidth = .0025) +
scale_colour_manual(values=c('0%'="black", '5%'="blue"), name="Type") +
theme_classic() +
theme(legend.justification=c(1,0),
legend.position=c(1,0))+
xlim(c(-.25,.25)) +
scale_y_continuous(breaks = y_marks, limits=c(0,15000), labels=c(0,.01,.02,.03)) +
theme(legend.justification=c(1,0),
legend.position=c(1,.5))
y_marks <- c(0,.01,.02,.03)*dim(subset(all_data, type == '0%'))[1]
ggplot(all_data, aes(Corr)) +
geom_histogram(data=subset(all_data, type == '0%'), fill = "black", aes(colour='0%'), alpha = 0.2,binwidth = .025) +
geom_histogram(data=subset(all_data, type == '5%'), fill = "blue", aes(colour='5%'), alpha = 0.2, binwidth = .025) +
scale_colour_manual(values=c('0%'="black", '5%'="blue"), name="Type") +
theme_classic() +
theme(legend.justification=c(1,0),
legend.position=c(1,0))+
xlim(c(-.25,.25)) +
scale_y_continuous(breaks = y_marks, limits=c(0,15000), labels=c(0,.01,.02,.03)) +
theme(legend.justification=c(1,0),
legend.position=c(1,.5))
y_marks <- c(0,.01,.02,.03)*dim(subset(all_data, type == '0%'))[1]
ggplot(all_data, aes(Corr)) +
geom_histogram(data=subset(all_data, type == '0%'), fill = "black", aes(colour='0%'), alpha = 0.2,binwidth = .001) +
geom_histogram(data=subset(all_data, type == '5%'), fill = "blue", aes(colour='5%'), alpha = 0.2, binwidth = .001) +
scale_colour_manual(values=c('0%'="black", '5%'="blue"), name="Type") +
theme_classic() +
theme(legend.justification=c(1,0),
legend.position=c(1,0))+
xlim(c(-.25,.25)) +
scale_y_continuous(breaks = y_marks, limits=c(0,15000), labels=c(0,.01,.02,.03)) +
theme(legend.justification=c(1,0),
legend.position=c(1,.5))
y_marks <- c(0,.01,.02,.03)*dim(subset(all_data, type == '0%'))[1]
ggplot(all_data, aes(Corr)) +
geom_histogram(data=subset(all_data, type == '0%'), fill = "black", aes(colour='0%'), alpha = 0.2,binwidth = .005) +
geom_histogram(data=subset(all_data, type == '5%'), fill = "blue", aes(colour='5%'), alpha = 0.2, binwidth = .005) +
scale_colour_manual(values=c('0%'="black", '5%'="blue"), name="Type") +
theme_classic() +
theme(legend.justification=c(1,0),
legend.position=c(1,0))+
xlim(c(-.25,.25)) +
scale_y_continuous(breaks = y_marks, limits=c(0,15000), labels=c(0,.01,.02,.03)) +
theme(legend.justification=c(1,0),
legend.position=c(1,.5))
y_marks <- c(0,.01,.02,.03)*dim(subset(all_data, type == '0%'))[1]
ggplot(all_data, aes(Corr)) +
geom_histogram(data=subset(all_data, type == '0%'), fill = "black", aes(colour='0%'), alpha = 0.2,binwidth = .0025) +
geom_histogram(data=subset(all_data, type == '5%'), fill = "blue", aes(colour='5%'), alpha = 0.2, binwidth = .0025) +
scale_colour_manual(values=c('0%'="black", '5%'="blue"), name="Type") +
theme_classic() +
theme(legend.justification=c(1,0),
legend.position=c(1,0))+
xlim(c(-.25,.25)) +
scale_y_continuous(breaks = y_marks, limits=c(0,15000), labels=c(0,.01,.02,.03)) +
theme(legend.justification=c(1,0),
legend.position=c(1,.5))
